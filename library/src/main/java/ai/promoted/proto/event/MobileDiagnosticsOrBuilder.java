// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/event/event.proto

package ai.promoted.proto.event;

public interface MobileDiagnosticsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:event.MobileDiagnostics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique identifier for device sending this message.
   * </pre>
   *
   * <code>string device_identifier = 1;</code>
   * @return The deviceIdentifier.
   */
  String getDeviceIdentifier();
  /**
   * <pre>
   * Unique identifier for device sending this message.
   * </pre>
   *
   * <code>string device_identifier = 1;</code>
   * @return The bytes for deviceIdentifier.
   */
  com.google.protobuf.ByteString
      getDeviceIdentifierBytes();

  /**
   * <pre>
   * Version identifier for client app.
   * </pre>
   *
   * <code>string client_version = 2;</code>
   * @return The clientVersion.
   */
  String getClientVersion();
  /**
   * <pre>
   * Version identifier for client app.
   * </pre>
   *
   * <code>string client_version = 2;</code>
   * @return The bytes for clientVersion.
   */
  com.google.protobuf.ByteString
      getClientVersionBytes();

  /**
   * <pre>
   * Version of Promoted library.
   * </pre>
   *
   * <code>string promoted_library_version = 3;</code>
   * @return The promotedLibraryVersion.
   */
  String getPromotedLibraryVersion();
  /**
   * <pre>
   * Version of Promoted library.
   * </pre>
   *
   * <code>string promoted_library_version = 3;</code>
   * @return The bytes for promotedLibraryVersion.
   */
  com.google.protobuf.ByteString
      getPromotedLibraryVersionBytes();

  /**
   * <pre>
   * Number of batch logs attempted.
   * </pre>
   *
   * <code>int32 batches_attempted = 4;</code>
   * @return The batchesAttempted.
   */
  int getBatchesAttempted();

  /**
   * <pre>
   * Number of batch logs sent successfully.
   * </pre>
   *
   * <code>int32 batches_sent_successfully = 5;</code>
   * @return The batchesSentSuccessfully.
   */
  int getBatchesSentSuccessfully();

  /**
   * <pre>
   * Number of batch logs that failed to send.
   * </pre>
   *
   * <code>int32 batches_with_errors = 6;</code>
   * @return The batchesWithErrors.
   */
  int getBatchesWithErrors();

  /**
   * <pre>
   * Error history.
   * </pre>
   *
   * <code>.event.ErrorHistory error_history = 7;</code>
   * @return Whether the errorHistory field is set.
   */
  boolean hasErrorHistory();
  /**
   * <pre>
   * Error history.
   * </pre>
   *
   * <code>.event.ErrorHistory error_history = 7;</code>
   * @return The errorHistory.
   */
  ErrorHistory getErrorHistory();
  /**
   * <pre>
   * Error history.
   * </pre>
   *
   * <code>.event.ErrorHistory error_history = 7;</code>
   */
  ErrorHistoryOrBuilder getErrorHistoryOrBuilder();

  /**
   * <pre>
   * Ancestor ID history. See #133.
   * </pre>
   *
   * <code>.event.AncestorIdHistory ancestor_id_history = 8;</code>
   * @return Whether the ancestorIdHistory field is set.
   */
  boolean hasAncestorIdHistory();
  /**
   * <pre>
   * Ancestor ID history. See #133.
   * </pre>
   *
   * <code>.event.AncestorIdHistory ancestor_id_history = 8;</code>
   * @return The ancestorIdHistory.
   */
  AncestorIdHistory getAncestorIdHistory();
  /**
   * <pre>
   * Ancestor ID history. See #133.
   * </pre>
   *
   * <code>.event.AncestorIdHistory ancestor_id_history = 8;</code>
   */
  AncestorIdHistoryOrBuilder getAncestorIdHistoryOrBuilder();
}
