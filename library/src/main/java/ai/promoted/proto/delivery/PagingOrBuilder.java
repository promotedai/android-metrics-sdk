// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/delivery/delivery.proto

package ai.promoted.proto.delivery;

public interface PagingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:delivery.Paging)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identity for the paging request (opaque token).
   * A single paging_id will have many associated requests to get the fully
   * paged response set (hence, many request_id's and client_request_id's).
   * Required if using the cursor for the last_index; optional if using offset.
   * Setting this value provides better paging consistency/stability.  Ideally,
   * it should be set from the initial paging response
   * (Response.paging_info.paging_id).
   * An external value can be used when *not* using promoted.ai's item
   * datastore.  The value must be specific enough to be globally unique, yet
   * general enough to ignore paging parameters.  A good example of a useful,
   * externally set paging_id is to use the paging token or identifiers returned
   * by your item datastore retrieval while passing the eligible insertions in
   * the Request.  If in doubt, rely on the Response.paging_info.paging_id or
   * contact us.
   * </pre>
   *
   * <code>string paging_id = 1;</code>
   * @return The pagingId.
   */
  String getPagingId();
  /**
   * <pre>
   * Identity for the paging request (opaque token).
   * A single paging_id will have many associated requests to get the fully
   * paged response set (hence, many request_id's and client_request_id's).
   * Required if using the cursor for the last_index; optional if using offset.
   * Setting this value provides better paging consistency/stability.  Ideally,
   * it should be set from the initial paging response
   * (Response.paging_info.paging_id).
   * An external value can be used when *not* using promoted.ai's item
   * datastore.  The value must be specific enough to be globally unique, yet
   * general enough to ignore paging parameters.  A good example of a useful,
   * externally set paging_id is to use the paging token or identifiers returned
   * by your item datastore retrieval while passing the eligible insertions in
   * the Request.  If in doubt, rely on the Response.paging_info.paging_id or
   * contact us.
   * </pre>
   *
   * <code>string paging_id = 1;</code>
   * @return The bytes for pagingId.
   */
  com.google.protobuf.ByteString
      getPagingIdBytes();

  /**
   * <pre>
   * Required.  The number of items (insertions) to return.
   * </pre>
   *
   * <code>int32 size = 2;</code>
   * @return The size.
   */
  int getSize();

  /**
   * <code>string cursor = 3;</code>
   * @return Whether the cursor field is set.
   */
  boolean hasCursor();
  /**
   * <code>string cursor = 3;</code>
   * @return The cursor.
   */
  String getCursor();
  /**
   * <code>string cursor = 3;</code>
   * @return The bytes for cursor.
   */
  com.google.protobuf.ByteString
      getCursorBytes();

  /**
   * <code>int32 offset = 4;</code>
   * @return Whether the offset field is set.
   */
  boolean hasOffset();
  /**
   * <code>int32 offset = 4;</code>
   * @return The offset.
   */
  int getOffset();

  public Paging.StartingCase getStartingCase();
}
