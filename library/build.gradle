plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'jacoco'
    id 'io.gitlab.arturbosch.detekt'
    id 'com.github.dawnwords.jacoco.badge' version "0.2.0"
}

ext {
    version = "0.0.1"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName project.ext.version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            all {
                jvmArgs '-noverify', '-ea'
                jacoco {
                    includeNoLocationClasses = true
                }
            }
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'

    implementation "io.insert-koin:koin-android:3.0.1"

    implementation 'androidx.core:core-ktx:1.3.2'

    implementation 'com.google.protobuf:protobuf-java:3.10.0'
    implementation 'com.google.protobuf:protobuf-java-util:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    testImplementation 'junit:junit:4.+'
    testImplementation "io.mockk:mockk:1.11.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*'] // see related issue https://github.com/gradle/gradle/issues/5184#issuecomment-457865951
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            'ai/promoted/internal/**/*.*'
    ]
    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

jacocoBadgeGenSetting {
    jacocoReportPath  "$buildDir/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
    readmePath "$projectDir/../README.md"
    // since v0.2.0, percentage limitation (0-100) for different type of coverage
    limit = ['instruction': 0, 'branch': 0, 'line': 0, 'method': 0, 'class': 0]
}

afterEvaluate {
    publishing {
        publications {
            snapshot(MavenPublication) {
                groupId "ai.promoted"
                artifactId "android-metrics-sdk"
                version "${project.ext.version}-SNAPSHOT"

                from components.release

                pom {
                    name = "android-metrics-sdk"
                    description = "Promoted.Ai's Android SDK snapshot"
                }
            }

            release(MavenPublication) {
                groupId "ai.promoted"
                artifactId "android-metrics-sdk"
                version project.ext.version

                from components.release

                pom {
                    name = "android-metrics-sdk"
                    description = "Promoted.Ai's Android SDK"
                }
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/promotedai/android-metrics-sdk"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }

            maven {
                name = 'LocalMavenRepo'
                url = "file://${buildDir}/repo"
            }
        }
    }
}